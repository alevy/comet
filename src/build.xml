<?xml version="1.0"?>

<!--
	
NOTE:  You may need to set the  ANT_OPTS="-Xmx512m"  env prop in order to compile this project successfully.

-->

<project default="jar" name="ActiveVuze" basedir=".">

   <property name="root.dir" value="." />  <!-- REMINDER: this needs to be "." for public source -->
   <property name="src.dir" value="src" />
   <property name="test.dir" value="test" />
   <property name="testdata.dir" value="testdata" />
   <property name="apps.dir" value="apps/vanish/src" />
	
   <property name="libs.dir" value="lib" />
   <property name="build.dir" value="build/classes" />
   <property name="build.testdata" value="build/testdata" />
   <property name="dist.dir" value="dist" />
   <property name="reports.dir" value="reports" />
   
   <property name="generic.excludes" value="**/*.jar **/*.txt **/*.jardesc **/.classpath **/.project **/aereg.lib **/aereg.dll" />
   <property name="dist.jar.excludes" value="${generic.excludes} **/*.java " />
   <!-- <property name="dist.source.excludes" value="${generic.excludes} **/*.class" /> -->
   
   <property name="jarname" value="ActiveVuze.jar" />
   
   <target name="init" >
      <echo message="Building ${jarname}..." />

      <tstamp/>

      <mkdir dir="${root.dir}/${dist.dir}" />
      <mkdir dir="${root.dir}/${build.dir}" />
      <mkdir dir="${root.dir}/${build.testdata}" />
   	  <mkdir dir="${root.dir}/${reports.dir}" />
   	  <mkdir dir="${root.dir}/${reports.dir}/raw" />
   	  <mkdir dir="${root.dir}/${reports.dir}/html" />
   </target>
   
   <target name="compile" depends="init" >
      <path id="libs.classpath">
         <fileset dir="${root.dir}/${libs.dir}" includes="**/*.jar" />
      </path>
   
      <javac srcdir="${root.dir}/${src.dir}" destdir="${root.dir}/${build.dir}" nowarn="yes" source="1.6" target="1.6" includeAntRuntime="no" debug="true" debuglevel="lines,vars,source" >
         <classpath refid="libs.classpath" />
      </javac>
   </target>

   <target name="jar" depends="compile" >
      <jar destfile="${root.dir}/${dist.dir}/${jarname}" basedir="${root.dir}" excludes="${dist.jar.excludes}" >
         <manifest>
            <attribute name="Main-Class" value="org.gudy.azureus2.ui.common.Main" />
            <attribute name="Class-Path" value="ActiveVuze.jar apple-extensions.jar commons-cli.jar log4j.jar swt.jar swt-win32.jar swt-osx.jar" />
         </manifest>
      </jar>
      
      <!-- <zip destfile="${dist.dir}/Azureus2_source.zip" basedir="." excludes="${dist.source.excludes}" /> -->

   </target>
	
   <!-- Apps: -->
   <target name="compile-apps" depends="compile" >
   	    <path id="apps.classpath">
   	    	<fileset dir="${root.dir}/${libs.dir}" includes="**/*.jar" />
   	    	<dirset dir="${root.dir}/${build.dir}" />
   	    </path>
        <javac srcdir="${root.dir}/${apps.dir}"
        	   destdir="${root.dir}/${build.dir}"
        	   nowarn="yes" source="1.6" target="1.6" includeAntRuntime="no"
          	   debug="true" debuglevel="lines,vars,source" >
   	        <classpath refid="apps.classpath" />
        </javac>
   </target>
    
   <!-- Tests: -->
   <target name="compile-tests" depends="compile,compile-apps" >
       <path id="libs.classpath">
	         <fileset dir="${root.dir}/${libs.dir}" includes="**/*.jar" />
	   </path>
   	   <path id="all.classpath">
			<fileset dir="${root.dir}/${libs.dir}" includes="**/*.jar" />
			<dirset dir="${root.dir}/${build.dir}" />
		  	<dirset dir="${root.dir}/${build.testdata}" />
   	   </path>
	   
       <javac srcdir="${root.dir}/${test.dir}" destdir="${root.dir}/${build.dir}" nowarn="yes" source="1.6" target="1.6" includeAntRuntime="no" debug="true" debuglevel="lines,vars,source" >
	        <classpath refid="libs.classpath" />
       </javac>
		
       <!-- Copy and compile the testdata. -->
	   <copydir dest="${root.dir}/${build.testdata}" src="${root.dir}/${testdata.dir}" excludes="**/*.java" />
           <javac srcdir="${root.dir}/${testdata.dir}" destdir="${root.dir}/${build.testdata}" nowarn="yes" source="1.6" target="1.6" includeAntRuntime="no" debug="true" debuglevel="lines,vars,source" >
               <classpath refid="all.classpath" />
		  </javac>
   </target>
   	
   <!-- Generate test data here. -->
   <target name="gentestdata">
   		<java classname="data.ClassObjectOutputStreamTestGenerator" fork="true">
   			<classpath refid="all.classpath" />
   		</java>
   </target>

   <target name="run-tests" depends="compile-tests,gentestdata"
           description="run the test suite">
	    <junit printsummary="withOutAndErr" haltonfailure="yes" showoutput="yes" >
	      <classpath>
	        <pathelement path="${root.dir}/${build.dir}"/>
	        <fileset dir="${root.dir}/${libs.dir}">
	          <include name="*.jar"/>
	        </fileset>
	      </classpath>

	      <batchtest fork="yes" todir="${root.dir}/${reports.dir}/raw/">
	        <formatter type="xml"/>
	        <fileset dir="${root.dir}/${test.dir}">
	          <include name="**/*Test.java"/>
	        </fileset>
	      </batchtest>
	    </junit>
   </target>

   <target name ="test" depends="run-tests">
	    <junitreport todir="${root.dir}/${reports.dir}">
	      <fileset dir="${reports.dir}/raw/">
	        <include name="TEST-*.xml"/>
	      </fileset>
	      <report format="frames" todir="${reports.dir}/html/"/>
	    </junitreport>
   </target>
	
   <target name="clean" >
      <delete dir="${root.dir}/${build.dir}"/>
      <delete dir="${root.dir}/${dist.dir}"/>
   	  <delete dir="${root.dir}/${reports.dir}"/>
   </target>

</project>

